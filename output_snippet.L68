00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 3/8/2016 12:45:07 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00001000                             7      ORG    $1000
00001000                             8  START:                  ; first instruction of program
00001000  13FC 0080 000011A0         9      MOVE.B  #128,BUFFER_COUNTER
00001008  1439 000011A0             10      MOVE.B  BUFFER_COUNTER,D2
0000100E  45F9 00001120             11      LEA     BUFFER,A2
00001014  264A                      12      MOVEA.L A2,A3
00001016                            13  POPULATE:                ; will remove from final program
00001016  16FC 004D                 14      MOVE.B  #$4D,(A3)+
0000101A  5302                      15      SUBI.B  #1,D2
0000101C  0C02 0000                 16      CMPI.B  #0,D2
00001020  6700 0004                 17      BEQ     NEXT
00001024  60F0                      18      BRA POPULATE
00001026                            19  NEXT:
00001026  143C 0019                 20      MOVE.B  #25,D2 ; output x lines at a time
0000102A  1602                      21      MOVE.B  D2,D3 ; store x for reloading
0000102C  123C 0001                 22      MOVE.B  #1,D1 ; 1 byte long
00001030  6000 0002                 23      BRA OUTLOOP
00001034                            24  OUTLOOP:
00001034  324A                      25      MOVEA.W A2,A1 ; load (next) data at data buffer to A1
00001036  524A                      26      ADDA.W  #1,A2
00001038  103C 0000                 27      MOVE.B  #0,D0 ; output string at A1 with CRLF
0000103C  4E4F                      28      TRAP    #15
0000103E  5339 000011A0             29      SUBI.B  #1,BUFFER_COUNTER ; decrement counter
00001044  0C39 0000 000011A0        30      CMPI.B  #0,BUFFER_COUNTER ; if all data is read, go to end
0000104C  6700 0028                 31      BEQ     END
00001050  5302                      32      SUBI.B  #1,D2 ; decrement D2 (x~0)
00001052  0C02 0000                 33      CMPI.B  #0,D2 ; if the x lines are displayed, goto branch
00001056  6700 0004                 34      BEQ     END_BATCH
0000105A  60D8                      35      BRA     OUTLOOP
0000105C                            36      
0000105C                            37  END_BATCH:
0000105C  43F9 0000109C             38      LEA     LOAD_MORE,A1 ; load "load more..." message to A1
00001062  103C 000D                 39      MOVE.B  #13,D0 ; display the message
00001066  4E4F                      40      TRAP    #15
00001068  103C 0005                 41      MOVE.B  #5,D0 ; wait for user to press a key (note: D1 stores the input)
0000106C  4E4F                      42      TRAP    #15
0000106E  123C 0001                 43      MOVE.B  #1,D1 ; reload byte size
00001072  1403                      44      MOVE.B  D3,D2 ; reload x, then go back to outloop
00001074  60BE                      45      BRA     OUTLOOP
00001076                            46      
00001076                            47  
00001076                            48      
00001076                            49  END:
00001076  43F9 000010BA             50      LEA     START_OVER,A1
0000107C  103C 0012                 51      MOVE.B  #18,D0
00001080  4E4F                      52      TRAP    #15
00001082  0C01 0001                 53      CMPI.B  #1,D1
00001086  6700 FF78                 54      BEQ     START
0000108A  43F9 00001107             55      LEA     END_PROCESS,A1
00001090  103C 000E                 56      MOVE.B  #14,D0
00001094  4E4F                      57      TRAP    #15
00001096  103C 0009                 58      MOVE.B  #9,D0
0000109A  4E4F                      59      TRAP    #15
0000109C                            60      
0000109C                            61  
0000109C  =0000000D                 62  CR  EQU $0D
0000109C  =0000000A                 63  LF  EQU $0A
0000109C                            64  
0000109C= 0D 0A 50 72 65 73 ...     65  LOAD_MORE     DC.B    CR,LF,'Press enter to load more...',0
000010BA= 0D 0A 54 68 61 74 ...     66  START_OVER    DC.B    CR,LF,'That was exciting! Would you like to try again? (1: yes, other keys: no)',CR,LF,0
00001107= 0D 0A 3A 28 20 53 ...     67  END_PROCESS   DC.B    CR,LF,':( See you again soon!',0
00001120                            68  BUFFER   DS.B    128 ; remove from integration
000011A0                            69  BUFFER_COUNTER DS.B   1 ; remove from integration
000011A1                            70  
000011A1                            71      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BUFFER              1120
BUFFER_COUNTER      11A0
CR                  D
END                 1076
END_BATCH           105C
END_PROCESS         1107
LF                  A
LOAD_MORE           109C
NEXT                1026
OUTLOOP             1034
POPULATE            1016
START               1000
START_OVER          10BA
